package com.temp.pack;
// Generated Jul 19, 2018 11:30:14 AM by Hibernate Tools 5.2.10.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

/**
 * RegisteredUser generated by hbm2java
 */
//@Entity
@Table(name = "registered_user", schema = "public", uniqueConstraints = { @UniqueConstraint(columnNames = "email"),
		@UniqueConstraint(columnNames = "mobile_number") })
@JsonIdentityInfo(
		  generator = ObjectIdGenerators.PropertyGenerator.class, 
		  property = "id")
public class RegisteredUser implements java.io.Serializable {

	private int id;
	private RefState refState;
	private String name;
	private String mobileNumber;
	private String phoneNumber;
	private String email;
	private String address;
	private String districtId;
	private String pinCode;
	private String aadhaarNumber;
	private boolean requestContactPermission;
	private Date entryDate;
	private Integer photoIdCard;
	private Set<RefRole> refRoles = new HashSet<RefRole>(0);
	private Set<ProfileClosureReasonDetails> profileClosureReasonDetailses = new HashSet<ProfileClosureReasonDetails>(
			0);
	private UserLoginDetails userLoginDetails;
	private Set<Note> notes = new HashSet<Note>(0);
	private Set<Profile> profiles = new HashSet<Profile>(0);

	public RegisteredUser() {
	}

	public RegisteredUser(int id, String name, String mobileNumber, boolean requestContactPermission, Date entryDate) {
		this.id = id;
		this.name = name;
		this.mobileNumber = mobileNumber;
		this.requestContactPermission = requestContactPermission;
		this.entryDate = entryDate;
	}

	public RegisteredUser(int id, RefState refState, String name, String mobileNumber, String phoneNumber, String email,
			String address, String districtId, String pinCode, String aadhaarNumber, boolean requestContactPermission,
			Date entryDate, Integer photoIdCard, Set<RefRole> refRoles,
			Set<ProfileClosureReasonDetails> profileClosureReasonDetailses, UserLoginDetails userLoginDetails,
			Set<Note> notes, Set<Profile> profiles) {
		this.id = id;
		this.refState = refState;
		this.name = name;
		this.mobileNumber = mobileNumber;
		this.phoneNumber = phoneNumber;
		this.email = email;
		this.address = address;
		this.districtId = districtId;
		this.pinCode = pinCode;
		this.aadhaarNumber = aadhaarNumber;
		this.requestContactPermission = requestContactPermission;
		this.entryDate = entryDate;
		this.photoIdCard = photoIdCard;
		this.refRoles = refRoles;
		this.profileClosureReasonDetailses = profileClosureReasonDetailses;
		this.userLoginDetails = userLoginDetails;
		this.notes = notes;
		this.profiles = profiles;
	}

	@Id

	@Column(name = "id", columnDefinition="bpchar(3)", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "state_id", columnDefinition="bpchar(2)")
	public RefState getRefState() {
		return this.refState;
	}

	public void setRefState(RefState refState) {
		this.refState = refState;
	}

	@Column(name = "name", nullable = false, length = 99)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "mobile_number", columnDefinition="bpchar(10)", unique = true, nullable = false, length = 10)
	public String getMobileNumber() {
		return this.mobileNumber;
	}

	public void setMobileNumber(String mobileNumber) {
		this.mobileNumber = mobileNumber;
	}

	@Column(name = "phone_number", length = 15)
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Column(name = "email", unique = true, length = 254)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "address")
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "district_id", columnDefinition="bpchar(3)", length = 3)
	public String getDistrictId() {
		return this.districtId;
	}

	public void setDistrictId(String districtId) {
		this.districtId = districtId;
	}

	@Column(name = "pin_code", length = 6)
	public String getPinCode() {
		return this.pinCode;
	}

	public void setPinCode(String pinCode) {
		this.pinCode = pinCode;
	}

	@Column(name = "aadhaar_number", length = 12)
	public String getAadhaarNumber() {
		return this.aadhaarNumber;
	}

	public void setAadhaarNumber(String aadhaarNumber) {
		this.aadhaarNumber = aadhaarNumber;
	}

	@Column(name = "request_contact_permission", nullable = false)
	public boolean isRequestContactPermission() {
		return this.requestContactPermission;
	}

	public void setRequestContactPermission(boolean requestContactPermission) {
		this.requestContactPermission = requestContactPermission;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "entry_date", nullable = false, length = 29)
	public Date getEntryDate() {
		return this.entryDate;
	}

	public void setEntryDate(Date entryDate) {
		this.entryDate = entryDate;
	}

	@Column(name = "photo_id_card")
	public Integer getPhotoIdCard() {
		return this.photoIdCard;
	}

	public void setPhotoIdCard(Integer photoIdCard) {
		this.photoIdCard = photoIdCard;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "user_role", schema = "public", joinColumns = {
			@JoinColumn(name = "user_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "role_id", nullable = false, updatable = false) })
	public Set<RefRole> getRefRoles() {
		return this.refRoles;
	}

	public void setRefRoles(Set<RefRole> refRoles) {
		this.refRoles = refRoles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "registeredUser")
	public Set<ProfileClosureReasonDetails> getProfileClosureReasonDetailses() {
		return this.profileClosureReasonDetailses;
	}

	public void setProfileClosureReasonDetailses(Set<ProfileClosureReasonDetails> profileClosureReasonDetailses) {
		this.profileClosureReasonDetailses = profileClosureReasonDetailses;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "registeredUser")
	public UserLoginDetails getUserLoginDetails() {
		return this.userLoginDetails;
	}

	public void setUserLoginDetails(UserLoginDetails userLoginDetails) {
		this.userLoginDetails = userLoginDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "registeredUser")
	@JsonIgnore
	public Set<Note> getNotes() {
		return this.notes;
	}

	public void setNotes(Set<Note> notes) {
		this.notes = notes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "registeredUser")
	@JsonIgnore
	public Set<Profile> getProfiles() {
		return this.profiles;
	}

	public void setProfiles(Set<Profile> profiles) {
		this.profiles = profiles;
	}

}
